name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test
      - name: Run e2e tests
        run: npm run test:e2e

  deploy_to_render:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    steps:
      - name: Trigger deployment
        uses: sws2apps/render-deployment@main
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false

  tag_release:
    needs: deploy_to_render
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          DRY_RUN: false

  notify_discord:
    needs: [simple_deployment_pipeline, deploy_to_render, tag_release]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        uses: rjstone/discord-webhook-notify@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          severity: ${{ job.status == 'success' && 'info' || 'error' }}
          details: |
            Repository: ${{ github.repository }}
            Workflow: ${{ github.workflow }}
            Event: ${{ github.event_name }}
            Actor: ${{ github.actor }}
            Commit: ${{ github.sha }}
            Status: ${{ job.status == 'success' && '✅ All jobs succeeded' || '❌ Some jobs failed' }}
